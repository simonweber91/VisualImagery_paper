function tmass_stats = mri_tmass_stats(p)

% Performs permutation-based cluster t-mass analysisto determine clusters
% of subsequent time points with above-chance reconstruction accuracy based
% on t-tests. First, permutation results are loaded for all subejcts.
% Chance-level is removed (to allow testing against 0) and a slight
% temporal smoothing is applied. Then, the cluster t-mass is computed (see
% cluster_t_mass.m).

%%% Load data and adjust format for 'cluster_t_mass.m' %%%

bfca_temp = zeros(numel(p.subjects), p.psvr.n_tr, p.psvr.n_perm + 1);
for i_sub = 1:numel(p.subjects)
    % Get subject ID
    sub_id = p.subjects(i_sub);
    % Get subject ID as string
    sub_str = num2str(sub_id,'%02i');
    % Load reconstruction results
    bfca_file = fullfile(p.base_dir, 'data', ['sub-' sub_str], 'results', ['bfca_' p.psvr.label '_' p.psvr.roi '.mat']);
    load(bfca_file, 'bfca');
    bfca_temp(i_sub,:,:) = permute(bfca,[3 2 1]);
end
bfca = bfca_temp;

% Remove chance-level and smooth
bfca = bfca - 50;
bfca = permute(moving_average(permute(bfca, [2 1 3]), 3), [2 1 3]);

tmass_stats = cluster_t_mass(bfca, 'right');

% Save stats
out_dir = fullfile(p.base_dir, 'data', 'all', 'results');
if ~exist(out_dir,'dir'), mkdir(out_dir); end
out_file = fullfile(out_dir, ['pSVR_' p.psvr.event '_' p.psvr.label '_' p.psvr.roi '_stats.mat']);
save(out_file, 'tmass_stats')